@using VirtualAttackTableLib.TargetShipParameter
@using BlazorWASMAttackTable.Client.Interactions.Common;
@using Blazored.Modal;
@using Blazored.Modal.Services;
@using CallbackList
@using BlazorWASMAttackTable.Client.Interactions
@using BlazorWASMAttackTable.Client.Interactions.AttackTableInteractions
@using BlazorWASMAttackTable.Client.Elements.SubscriptionDisposal

@inherits SubscriptionDisposingElement

<tr id="attack-table-entry-row">
    <td style="height: inherit;" title="Set absolute dimensions from image" @onclick="RequestShipDimensionsFromImage">
        <img id="attack-table-row-element" style="aspect-ratio: 2/1; object-fit: contain;" src="@BlazorAttackTableLib.GetShipImagePath(TargetShip.TargetShip.Data.TypeName)" />
    </td>

    <td style="height: inherit;">@TargetShip.TargetShip.Data.TypeName.Replace('_', ' ')</td>

    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.Bearing" OwningEntry="this" /></td>

    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.AbsoluteHeight" OwningEntry="this" /></td>
    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.VisibleHeight" OwningEntry="this" /></td>
    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.AbsoluteLength" OwningEntry="this" /></td>
    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.VisibleLength" OwningEntry="this" /></td>

    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.TargetRange" OwningEntry="this" /></td>

    <td style="height: inherit;">
        <div class="flexrow" style="height: 100px;">
            <div style="width: 75%; justify-content: center; display: flex;">
                <FloatParameterCell Interaction="TargetShip.AoB" OwningEntry="this" />
            </div>
            <div style="width: 25%; display: flex; align-items: center; justify-content: center;">
                <div style="aspect-ratio: 1/1; max-height: 90%; width: 100%; display: flex; align-items: center; justify-content: center;">
                    <div style="aspect-ratio: 1/1; height: 100%; max-width: 100%;">
                        <SelectAoBQuarter Parameter="TargetShip.AoB.Parameter" />
                    </div>
                </div>
            </div>
        </div>
    </td>

    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.HullTime" OwningEntry="this" /></td>
    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.OneDegreeTime" OwningEntry="this" /></td>

    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.TargetSpeed" OwningEntry="this" /></td>
    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.AngularSpeed" OwningEntry="this" /></td>

    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.TorpedoSpeed" OwningEntry="this" /></td>

    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.BoatSpeed" OwningEntry="this" /></td>

    <td style="height: inherit;"><FloatParameterCell Interaction="TargetShip.LeadAngle" OwningEntry="this" /></td>

    <td style="height: inherit;" title="Remove target" @onclick="RemoveThisTarget"><img src="images/Cross.svg" style="object-fit: contain; height: 100%; width: 100%;" /></td>
</tr>

@code {
    #region Fields
    private IParameterDefinition? _definitionToHighlightParameters;
    #endregion

    #region Properties
    [CascadingParameter]
    public IModalService Modal { get; set; } = null!;

    [Parameter, EditorRequired]
    public TargetShipAlteredUnitsWrap TargetShip { get; set; } = null!;

    [Parameter, EditorRequired]
    public AttackTableInteraction AttackTable { get; set; } = null!;

    public IParameterDefinition? DefinitionToHighlightParameters
    {
        get
        {
            return _definitionToHighlightParameters;
        }
        set
        {
            if (_definitionToHighlightParameters != value)
            {
                _definitionToHighlightParameters = value;
                DefinitionToHighlightParametersChanged();
            }
        }
    }

    public ValueInteraction<IReadOnlySet<IParameter>> ParametersToHighlight { get; } = new(new HashSet<IParameter>());
    #endregion

    #region Methods
    protected override void OnParametersSet()
    {
        ParametersToHighlight.Value = new HashSet<IParameter>();
    }

    private void RemoveThisTarget()
    {
        AttackTable.RemoveTargetShip(TargetShip);
    }

    private void RequestShipDimensionsFromImage()
    {
        ObservationDimensionsFromShipImage.Show(Modal, new(), TargetShip,
            AttackTable.UnitsSelection.AbsoluteLength.SelectedOption.Value!.Value,
            AttackTable.UnitsSelection.AbsoluteHeight.SelectedOption.Value!.Value);
    }

    private void DefinitionToHighlightParametersChanged()
    {
        if (DefinitionToHighlightParameters == null)
        {
            ParametersToHighlight.Value = new HashSet<IParameter>();
        }
        else
        {
            ParametersToHighlight.Value = new HashSet<IParameter>(DefinitionToHighlightParameters.DependencyParameters);
        }
    }
    #endregion
}