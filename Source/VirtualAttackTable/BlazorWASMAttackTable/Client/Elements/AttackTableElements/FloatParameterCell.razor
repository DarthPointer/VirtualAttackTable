@using BlazorWASMAttackTable.Client.Elements.Common
@using BlazorWASMAttackTable.Client.Elements.SubscriptionDisposal

@typeparam TParameter
@typeparam TDefinitionKey
@inherits SubscriptionDisposingElement

<div class="flexcolumn" style="background-color: @BackgroundStyleEntry; width: 100%; height: 100%; justify-content: center;"
    @onmouseenter="OnMouseEnterThisCell" @onmouseleave="OnMouseLeaveThisCell">
    <div class="flexcolumn" style="margin: 5px; width: calc(100% - 10px); height: auto;">
        <Combobox Interaction="Interaction.DefinitionKeySelection"/>

        @if (Interaction.CanSetArbitraryValue)
        {
            <input @bind="DisplayValue" @bind:event="oninput" style="@BadInputStyleAffix" />
        }
        else
        {
            <input @bind="DisplayValue" disabled />
        }
    </div>
</div>

@code
{
    private string BadInputStyleAffix => BadInput ? "background-color: rgb(250, 250, 0, 0.8);" : "";

    private string BackgroundStyleEntry => Highlight ? "rgb(120, 120, 255)" : "transparent";
}